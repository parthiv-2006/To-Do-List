(()=>{"use strict";var e={56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],d=o.base?c[0]+o.base:c[0],l=i[d]||0,p="".concat(d," ").concat(l);i[d]=l+1;var u=n(p),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(h);else{var m=r(h,o);o.byIndex=s,t.splice(s,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=n(i[a]);t[s].references--}for(var c=o(e,r),d=0;d<i.length;d++){var l=n(i[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},194:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(601),r=n.n(o),i=n(314),a=n.n(i)()(r());a.push([e.id,".header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #f8f9fa;\n    box-shadow: 0 4px 5px rgba(0, 0, 0, 0.1);\n    padding: 1rem 2rem;\n}\n\n#createProject, #createTask {\n    border: none;\n    font-weight: bold;\n    padding: 0.5rem 1rem;\n    border-radius: 12px;\n    cursor: pointer;\n    box-shadow: 2px 2px 2px;\n    \n}\n\n#createProject {\n    background-color: lightblue;\n}\n\n#createTask {\n    background-color: lightgray;\n}\n\n#createProject:hover, #createTask:hover{\n    background-color: darkcyan;\n    color: white;\n    \n}\n\n.overlay {\n    /* Position it fixed to cover the entire viewport */\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n\n    /* Semi-transparent black background */\n    background-color: rgba(0, 0, 0, 0.6);\n\n    /* High z-index to sit on top of page content */\n    z-index: 999; \n}\n\n.task-form, .project-form, .change-detail-form {\n    z-index: 1000;\n    position: absolute;\n    top: 35%;\n    left: 50%;\n    transform: translateX(-50%); \n    background-color: antiquewhite;\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    gap: 10px;\n    padding: 12px;\n    border-radius: 10px;\n    box-shadow: 2px 2px 2px;\n\n}\n\n.form-buttons {\n    grid-column: 1 / -1; \n    justify-self: end; \n}\n\nlabel {\n    font-weight: bold;\n    font-size: 14px;\n}\n\ninput, select {\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background-color: whitesmoke;\n}\n\ninput:focus, select:focus {\n    outline: none;\n    border-color: #007bff;\n    box-shadow: 0 0 5px rgba(30, 144, 255, 0.5);\n}\n\n\n.form-button {\n    font-weight: bold;\n    padding: 0.5rem 0.5rem;\n    border-radius: 8px;\n    border: solid 0.5px black;\n}\n\n#add-task-button, #add-project-button, #change-project-button{\n    background-color: lightgreen;\n}\n\n#cancel-task-button, #cancel-project-button {\n    background-color: red;\n}\n\n#add-task-button:hover, #add-project-button:hover, #change-project-button:hover {\n    color: white;\n    background-color: darkgreen;\n}\n\n#cancel-task-button:hover, #cancel-project-button:hover {\n    color: white;\n    background-color: darkred;\n}\n",""]);const s=a},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n}).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},329:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(601),r=n.n(o),i=n(314),a=n.n(i)()(r());a.push([e.id,"/* Sidebar */\n\n.sidebar {\n    background-color: lightgrey;\n    border-right: 1px solid #e0e0e0;\n}\n\n.sidebar h1 {\n    font-size: 1.5rem;\n    text-align: center;\n    color: #333;\n    margin-bottom: 1.5rem;\n}\n\n.sidebar a {\n    background-color: #e0e0e0;\n    text-decoration: none;\n    color: #333;\n    font-size: 1rem;\n    padding: 4px 4px;\n    border-radius: 8px;\n}\n\n.sidebar a:hover {\n    background-color: darkgray;\n    color: white;\n}\n\n.sidebar a.active {\n    font-weight: bold;\n    color: black;\n    background-color: lightgreen;\n}\n\n",""]);const s=a},450:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(601),r=n.n(o),i=n(314),a=n.n(i)()(r());a.push([e.id,'/* Content */\n.main-container {\n    padding: 2rem;\n}\n\n.main-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.main-header h1 {\n    font-size: 3rem;\n    margin-bottom: 0px;\n}\n\n.main-header p {\n    font-size: 1rem;\n    color: gray;\n}\n\n.main-header-buttons {\n    display: flex;\n    gap: 0.5rem;\n}\n\n#delete-project, #edit-project-details {\n    font-weight: bold;\n    padding: 0.5rem 0.5rem;\n    border-radius: 8px;\n    border: solid 0.5px black;\n}\n\n#delete-project {\n    background-color: red;\n}\n\n#edit-project-details {\n    background-color: lightgreen;\n}\n\n#delete-project:hover{\n    color: white;\n    background-color: darkred;\n}\n\n#edit-project-details:hover{\n    color: white;\n    background-color: darkgreen;\n}\n\n.main {\n    padding: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1.5rem;\n}\n\n.task-card {\n    max-width: 10rem;\n    display: flex;\n    flex-direction: column;\n    min-height: 7rem;\n}\n\n.task-card {\n    position:relative;\n    background-color: lightgrey;\n    padding: 10px;\n    height: auto;\n    border-radius: 15px;\n    overflow-wrap: break-word;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    padding-left: 2.5rem;\n}\n\n.card-buttons {\n    margin-top: 0px;\n    display: flex;\n    justify-content: flex-end;\n}\n\n.card-content {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    margin-bottom: 0;\n    padding-bottom: 0;\n}\n\n.delete-check {\n    opacity: 0;\n}\n\n#edit-task-button {\n    padding: 0.2rem 0.8rem;\n    border-radius: 8px;\n    border: solid 0.2px black;\n    background-color: lightseagreen\n}\n\n#edit-task-button:hover {\n    color: white;\n    background-color: darkgray;\n}\n\n.checkmark {\n    position: absolute;\n    left: 3%;\n    top: 45%;\n    transform: translateY(-50%);\n    width: 15px;\n    height: 15px;\n    background-color: #eee;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n/* Change border color on hover */\n.custom-checkbox:hover .checkmark {\n    border-color: #777;\n}\n\n/* When the real checkbox is checked, change the background of our fake one */\n.delete-check:checked ~ .checkmark {\n    background-color: #2196F3; /* A nice blue for the checked state */\n    border-color: #2196F3;\n}\n\n/* Create the checkmark symbol (hidden by default) */\n.checkmark::after {\n    content: "";\n    position: absolute;\n    display: none;\n}\n\n/* Show the checkmark when the real checkbox is checked */\n.delete-check:checked ~ .checkmark::after {\n    display: block;\n}\n\n/* Style the checkmark symbol itself (a rotated L-shape) */\n.checkmark::after {\n    left: 5px;\n    top: 1px;\n    width: 3px;\n    height: 8px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    transform: rotate(45deg);\n}\n\n/* --- Styling for the Edit Task Form --- */\n\n.edit-task-form {\n    /* Use flexbox to stack the form elements vertically */\n    display: flex;\n    flex-direction: column;\n    gap: 10px; /* Adds consistent space between each label/input group */\n}\n\n.edit-task-form label {\n    /* Make labels bold and slightly smaller to create hierarchy */\n    font-weight: bold;\n    font-size: 14px;\n    color: #333;\n    margin-bottom: -5px; /* Pull the input slightly closer to its label */\n}\n\n.edit-task-form input,\n.edit-task-form select {\n    /* Consistent styling for all input fields */\n    width: 100%; /* Make inputs fill the width of the card */\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background-color: #fff;\n    box-sizing: border-box; /* Ensures padding doesn\'t affect the width */\n}\n\n.edit-task-form input:focus,\n.edit-task-form select:focus {\n    /* Highlight the active field for better UX */\n    outline: none;\n    border-color: #007bff; /* A nice blue to indicate focus */\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n}\n\n.edit-task-form button[type="submit"] {\n    /* Style the \'Finish\' button as a primary action */\n    align-self: flex-end; /* Push the button to the right */\n    padding: 6px 12px;\n    border: none;\n    border-radius: 6px;\n    background-color: #28a745; /* Green for a \'confirm\' action */\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    margin-top: 5px; /* Add a little space above the button */\n}\n\n.edit-task-form button[type="submit"]:hover {\n    background-color: #218838; /* Darken the green on hover */\n}\n',""]);const s=a},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},601:e=>{e.exports=function(e){return e[1]}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},962:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(601),r=n.n(o),i=n(314),a=n.n(i)()(r());a.push([e.id,'body {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-areas: "header header" "sidebar main" "sidebar main";\n    margin: 0;\n    padding: 0;\n    --project-padding: 10px;\n    position: relative;\n}\n\n\n.sidebar {\n    background-color: grey;\n    height: 100vh;\n    grid-area: sidebar;\n    padding: var(--project-padding);\n}\n.header {\n    grid-column-start: 2;\n    grid-area: header;\n    padding: var(--project-padding);\n}\n\n\n\n.hidden {\n    display: none;\n}\n\n.list-of-projects {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}',""]);const s=a}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o=n(72),r=n.n(o),i=n(825),a=n.n(i),s=n(659),c=n.n(s),d=n(56),l=n.n(d),p=n(540),u=n.n(p),h=n(113),m=n.n(h),b=n(194),k={};k.styleTagTransform=m(),k.setAttributes=l(),k.insert=c().bind(null,"head"),k.domAPI=a(),k.insertStyleElement=u(),r()(b.A,k),b.A&&b.A.locals&&b.A.locals;var f=n(962),g={};g.styleTagTransform=m(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),r()(f.A,g),f.A&&f.A.locals&&f.A.locals;var y=n(450),j={};j.styleTagTransform=m(),j.setAttributes=l(),j.insert=c().bind(null,"head"),j.domAPI=a(),j.insertStyleElement=u(),r()(y.A,j),y.A&&y.A.locals&&y.A.locals;var v=n(329),x={};x.styleTagTransform=m(),x.setAttributes=l(),x.insert=c().bind(null,"head"),x.domAPI=a(),x.insertStyleElement=u(),r()(v.A,x),v.A&&v.A.locals&&v.A.locals;class P{constructor(){this.body=document.querySelector("body"),this.header=document.querySelector(".header"),this.createProject=document.querySelector("#createProject"),this.createTask=document.querySelector("#createTask"),this.headerTitle=document.querySelector("#title"),this.taskForm=document.querySelector("#task-form"),this.taskName=document.querySelector("#task-name"),this.taskDescription=document.querySelector("#task-description"),this.taskDate=document.querySelector("#task-date"),this.taskPriority=document.querySelector("#task-priority"),this.addTaskButton=document.querySelector("#add-task-button"),this.mainContent=document.querySelector(".main"),this.mainProjectTitle=document.querySelector(".main-container h1"),this.deleteProjectButton=document.querySelector("#delete-project"),this.displayProjectDescription=document.querySelector("#display-project-description"),this.editProjectDetails=document.querySelector("#edit-project-details"),this.cancelTaskButton=document.querySelector("#cancel-task-button"),this.selectProject=document.querySelector("#project-for-task"),this.projectForm=document.querySelector("#project-form"),this.projectName=document.querySelector("#project-name"),this.projectDescription=document.querySelector("#project-description"),this.addProjectButton=document.querySelector("#add-project-button"),this.cancelProjectButton=document.querySelector("#cancel-project-button"),this.sidebar=document.querySelector(".sidebar"),this.projectLinks=document.querySelector(".list-of-projects")}}(new class{constructor(){this.dom=new P,this.projects=[],this.currentProject=null}init(){this.loadProjects(),this.addEventListeners(),0===this.projects.length?this.createProjectSection("Default Project","Auto Generated Project"):this.render()}saveProjects(){localStorage.setItem("toDoApp.projects",JSON.stringify(this.projects))}loadProjects(){const e=localStorage.getItem("toDoApp.projects");e&&(this.projects=JSON.parse(e),this.projects.length>0&&(this.currentProject=this.projects[0]))}addEventListeners(){this.dom.createTask.addEventListener("click",()=>{this.currentProject?(this.dom.editProjectDetails.disabled="true",this.dom.deleteProjectButton.disabled="true",this.dom.createProject.disabled="true",this.dom.body.classList.add("overlay"),this.dom.taskForm.classList.remove("hidden")):alert("Please create a project first!")}),this.dom.cancelTaskButton.addEventListener("click",()=>{this.dom.taskForm.reset(),this.dom.taskForm.classList.add("hidden"),this.dom.body.classList.remove("overlay"),this.dom.editProjectDetails.disabled=!1,this.dom.deleteProjectButton.disabled=!1,this.dom.createProject.disabled=!1}),this.dom.cancelProjectButton.addEventListener("click",()=>{this.dom.projectForm.reset(),this.dom.projectForm.classList.add("hidden"),this.dom.body.classList.remove("overlay"),this.dom.editProjectDetails.disabled=!1,this.dom.deleteProjectButton.disabled=!1,this.dom.createTask.disabled=!1}),this.dom.taskForm.addEventListener("submit",e=>{e.preventDefault(),this.dom.deleteProjectButton.disabled=!1,this.createTask(),this.dom.taskForm.reset(),this.dom.taskForm.classList.add("hidden"),this.dom.body.classList.remove("overlay")}),this.dom.createProject.addEventListener("click",()=>{this.dom.editProjectDetails.disabled="true",this.dom.deleteProjectButton.disabled="true",this.dom.createTask.disabled="true",this.dom.projectForm.classList.remove("hidden"),this.dom.body.classList.add("overlay")}),this.dom.projectForm.addEventListener("submit",e=>{e.preventDefault(),this.dom.deleteProjectButton.disabled=!1,this.createProjectSection(this.dom.projectName.value,this.dom.projectDescription.value),this.dom.projectForm.reset(),this.dom.projectForm.classList.add("hidden"),this.dom.body.classList.remove("overlay")}),this.dom.projectLinks.addEventListener("click",e=>{if("A"===e.target.tagName){const t=e.target.dataset.projectId,n=this.projects.find(e=>e.id===t);n&&(this.currentProject=n,this.render())}}),this.dom.deleteProjectButton.addEventListener("click",()=>{this.deleteProject()}),this.dom.mainContent.addEventListener("change",e=>{if(e.target.classList.contains("delete-check")){const t=e.target,n=t.closest(".task-card"),o=n.querySelector(".card-content"),r=n.querySelector("#edit-task-button"),i=n.dataset.taskId,a=this.currentProject.tasks.find(e=>e.id===i);a&&(a.isComplete=t.checked,this.saveProjects()),t.checked?(o.style.textDecoration="line-through",o.style.opacity="0.4",r.style.display="none"):(o.style.textDecoration="none",o.style.opacity="1",r.disabled=!1,r.style.display="block")}}),this.dom.editProjectDetails.addEventListener("click",()=>{if(this.dom.createProject.disabled="true",this.dom.createTask.disabled="true",this.dom.editProjectDetails.disabled="true",this.dom.deleteProjectButton.disabled="true",this.dom.body.classList.add("overlay"),!this.currentProject)return;const e=document.createElement("form");e.classList.add("change-detail-form"),e.innerHTML=`\n                <label for="new-project-name">Project Name:</label>\n                <input type="text" id="new-project-name" name="new-project-name"\n                placeholder="${this.currentProject.name}">\n\n                <label for="new-project-description">Description:</label>\n                <input type="text" name="new-project-description" id="new-project-description"\n                placeholder = "${this.currentProject.description}">\n\n                <button class="form-button" id="change-project-button" type="submit">Change Details</button>\n        `,this.dom.header.appendChild(e)}),this.dom.header.addEventListener("submit",e=>{if(e.target.classList.contains("change-detail-form")){this.dom.body.classList.remove("overlay"),e.preventDefault();const t=e.target,n=t.querySelector("#new-project-name"),o=t.querySelector("#new-project-description"),r=n.value,i=o.value;this.changeProjectDetails(r,i),t.classList.add("hidden")}this.dom.createProject.disabled=!1,this.dom.createTask.disabled=!1,this.dom.editProjectDetails.disabled=!1,this.dom.deleteProjectButton.disabled=!1}),this.dom.mainContent.addEventListener("click",e=>{if("edit-task-button"===e.target.id){e.target.disabled=!0;const t=e.target.closest(".task-card");if(!t)return;const n=t.dataset.taskId,o=this.currentProject.tasks.find(e=>e.id===n);if(!o)return;const r=document.createElement("form");r.classList.add("edit-task-form"),r.innerHTML=`\n                <label for="new-task-name">Task Name:</label>\n                <input type="text" id="new-task-name" name="task-name" value="${o.name}">\n            \n                <label for="new-task-description">Task Description (Optional):</label>\n                <input type="text" id="new-task-description" name="task-description" value="${o.description||""}">\n\n                <label for="new-task-date">Due Date:</label>\n                <input type="date" id="new-task-date" name="task-date" value="${o.date}">\n\n                <label for="new-task-priority">Priority:</label>\n                \n                <select name="task-priority" id="new-task-priority">\n                    <option value="none" ${"none"===o.priority?"selected":""}></option>\n                    <option value="low" ${"low"===o.priority?"selected":""}>Low</option>\n                    <option value="medium" ${"medium"===o.priority?"selected":""}>Medium</option>\n                    <option value="high" ${"high"===o.priority?"selected":""}>High</option>\n                </select>\n                \n                \n                <button class="edit-task-button" id="finish-edit" type="submit">Finish</button>\n                `,t.innerHTML="",t.style["padding-left"]="15px",t.appendChild(r)}}),this.dom.mainContent.addEventListener("click",e=>{if("delete-task-button"===e.target.id){const t=e.target.closest(".task-card").dataset.taskId;this.deleteTask(t)}}),this.dom.mainContent.addEventListener("submit",e=>{if(e.target.classList.contains("edit-task-form")){e.preventDefault();const t=e.target,n=t.closest(".task-card"),o=n.dataset.taskId;n.style["padding-left"]="2.5rem";const r=t.querySelector("#new-task-name"),i=t.querySelector("#new-task-description"),a=t.querySelector("#new-task-date"),s=t.querySelector("#new-task-priority"),c=r.value,d=i.value,l=a.value,p=s.value,u=this.changeTaskDetails(c,d,l,p,o);u&&(n.innerHTML=`\n                            <div class="card-content">\n                                <p>Task Name: ${u.name}</p>\n                                ${u.description?`<p>Description: ${u.description}</p>`:""}\n                                ${u.date?`<p>Due Date: ${u.date}</p>`:""}\n                                ${"none"!==u.priority?`<p>Priority: ${u.priority}</p>`:""}\n                            </div>\n                            <label class="custom-checkbox">  \x3c!-- Add a label wrapper --\x3e\n                                <input type="checkbox" class="delete-check">\n                                <span class="checkmark"></span> \x3c!-- This will be our fake box --\x3e\n                            </label>\n                            <div class="card-buttons">\n                                <button id="edit-task-button">Edit</button>\n                                <button class="edit-task-button" id="delete-task-button" type="submit">Delete</button>\n                            </div>\n                        `)}})}changeTaskDetails(e,t,n,o,r){if(!this.currentProject)return null;const i=this.currentProject.tasks.find(e=>e.id===r);return""!==e&&(i.name=e),i.description=t,i.date=n,i.priority=o,this.saveProjects(),i}changeProjectDetails(e,t){this.currentProject&&(""!==e&&(this.currentProject.name=e),""!==t&&(this.currentProject.description=t),this.render(),this.saveProjects())}deleteProject(){this.currentProject&&(this.projects=this.projects.filter(e=>e.id!==this.currentProject.id),this.projects.length>0?this.currentProject=this.projects[0]:this.currentProject=null,this.render(),this.saveProjects())}populateProjectDropdown(){this.dom.selectProject.innerHTML="",this.projects.forEach(e=>{const t=document.createElement("option");t.value=e.id,t.textContent=e.name,this.dom.selectProject.appendChild(t)})}createTask(){const e={id:`task-${Date.now()}`,name:this.dom.taskName.value,description:this.dom.taskDescription.value,date:this.dom.taskDate.value,priority:this.dom.taskPriority.value,isComplete:!1};this.currentProject=this.projects.find(e=>e.id===this.dom.selectProject.value),this.currentProject.tasks.push(e),this.render(),this.saveProjects()}deleteTask(e){this.currentProject&&(this.currentProject.tasks=this.currentProject.tasks.filter(t=>t.id!==e),this.render(),this.saveProjects())}createProjectSection(e,t){const n={id:`project-${Date.now()}`,name:e,tasks:[],description:t};this.projects.push(n),this.currentProject=n,this.render(),this.saveProjects()}createProjectHyperlink(){this.projects.forEach(e=>{const t=document.createElement("a");t.textContent=e.name+` (${e.tasks.length})`,t.href="#",t.classList.add("project-link"),t.dataset.projectId=e.id,e===this.currentProject&&t.classList.add("active"),this.dom.projectLinks.appendChild(t)})}displayTasksForProject(){this.currentProject.tasks.forEach(e=>{const t=document.createElement("div");if(t.classList.add("task-card"),t.dataset.taskId=e.id,t.innerHTML=`\n                \n                <div class="card-content">\n                    <p>Task Name: ${e.name}</p>\n                    ${e.description?`<p>Description: ${e.description}</p>`:""}\n                    ${e.date?`<p>Due Date: ${e.date}</p>`:""}\n                    ${"none"!==e.priority?`<p>Priority: ${e.priority}</p>`:""}\n                </div>\n                <label class="custom-checkbox">  \x3c!-- Add a label wrapper --\x3e\n                    <input type="checkbox" class="delete-check" ${e.isComplete?"checked":""}>\n                    <span class="checkmark"></span> \x3c!-- This will be our fake box --\x3e\n                </label>\n                <div class= 'card-buttons'>\n                    <button id="edit-task-button">Edit</button>\n                    <button class="edit-task-button" id="delete-task-button" type="submit">Delete</button>\n                </div>\n\n                \n            `,this.dom.mainContent.appendChild(t),e.isComplete){const e=t.querySelector(".card-content"),n=t.querySelector("#edit-task-button");e.style.textDecoration="line-through",e.style.opacity="0.4",n.style.display="none"}})}render(){if(this.dom.mainContent.innerHTML="",this.dom.projectLinks.innerHTML="",this.createProjectHyperlink(),this.populateProjectDropdown(),!this.currentProject)return this.dom.mainProjectTitle.textContent="You Have No Projects...",this.dom.deleteProjectButton.style.display="none",this.dom.editProjectDetails.style.display="none",void(this.dom.displayProjectDescription.textContent="Create a Project to Begin!");this.dom.editProjectDetails.style.display="block",this.dom.deleteProjectButton.style.display="block",this.dom.mainProjectTitle.textContent=this.currentProject.name,this.dom.displayProjectDescription.textContent=this.currentProject.description,this.displayTasksForProject()}}).init()})();